#!/bin/sh

# supported shells: bash, dash, ksh93, mksh, oksh, posh, yash, zsh

# --------------------------------------- Part 1: Run always ---------------------------------------

# basic xdg directory definitions - rest in ~/.config/shell/scripts/01-xdg.sh
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CACHE_HOME="$HOME/.local/cache"

# browser homepage
export WWW_HOME="https://lite.duckduckgo.com"

# uncomment to disable gnupg in this setup
#export DISABLE_GNUPG="y"

# session type, can be 'x11' or 'wayland'
export XDG_SESSION_TYPE="wayland"

# specify the window manager to use, see xinitrc for information
export X_WM_USE="dwm"

# rust install dir
export CARGO_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/cargo"

# npm install dir
export NPM_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/node"

# zsh script dir
export ZDOTDIR="${XDG_CONFIG_HOME:-$HOME/.config}/shell"

# function to add directories to our path
pathadd() {
    case ":$PATH:" in
        *:"${1%/}":*) ;;
        *) [ -d "$1" ] && { [ "$2" = "-a" ] && export PATH="${PATH:+$PATH:}${1%/}" || export PATH="${1%/}${PATH:+:$PATH}"; } ;;
    esac
}

# add more directories to the path
pathadd "/home/linuxbrew/.linuxbrew/bin"
pathadd "${NPM_HOME:-${XDG_DATA_HOME:-$HOME/.local/share}/node}/node_modules/.bin"
pathadd "$HOME/.nix-profile/bin"
pathadd "${CARGO_HOME:-${XDG_DATA_HOME:-$HOME/.local/share}/cargo}/bin"
pathadd "$HOME/.local/bin"

# find subdirs recursively in ~/.local/bin/scripts
command -v find >/dev/null 2>&1 && {
    for i in $(find $HOME/.local/bin -type d); do
        pathadd "$i"
    done

# use filename globbing if `find` isn't available (it should be...)
} || {
    for i in $HOME/.local/bin/*; do
        # add path
        [ -d "$i" ] && pathadd "$i"

        # add subdirs to path as well
        for j in $i/*; do
            [ -d "$j" ] && pathadd "$j"
        done
    done
}

# other users/group members can't write to user files
umask 022

# determine the name of the shell
export SHNAME="${ZSH_ARGZERO:-$0}"
export SHNAME="${SHNAME##-}"
export SHNAME="${SHNAME##*/}"

# find the shell's actual name
command -v readlink >/dev/null 2>&1 && {
    export SHNAME="$(readlink -f $(command -v "${SHNAME:-$SHELL}"))"
    export SHNAME="${SHNAME##*/}"
}

# determine the shell init file based on the name of the shell
[ -r "${XDG_CONFIG_HOME:-$HOME/.config}/shell/${SHNAME}rc" ] && {
    export ENV="${XDG_CONFIG_HOME:-$HOME/.config}/shell/${SHNAME}rc"
} || {
    export ENV="${XDG_CONFIG_HOME:-$HOME/.config}/shell/shrc"
}

# source everything in ~/.config/shell/scripts/
for i in ${XDG_CONFIG_HOME:-$HOME/.config}/shell/scripts/*.sh; do
    [ -r "$i" ] && . "$i"
done

# load other functions
[ -r "${XDG_CONFIG_HOME:-$HOME/.config}/shell/functions" ] && . "${XDG_CONFIG_HOME:-$HOME/.config}/shell/functions"


# ------------------------------ Part 2: Run in interactive sessions -------------------------------

# if our session is interactive, source the shell init file and scripts
case "$-" in
    *i*) for i in ${XDG_CONFIG_HOME:-$HOME/.config}/shell/scripts/interactive/*.sh; do
             [ -r "$i" ] && . "$i"
         done ;;
      *) ;;
esac

# end execution here
case "$USERPROFILE" in
    "") export USERPROFILE="y" ;;
     *) return 0 ;;
esac


# ---------------------------------------- Part 3: Run once ----------------------------------------

# source everything in ~/.config/shell/scripts/run-once/
for i in ${XDG_CONFIG_HOME:-$HOME/.config}/shell/scripts/once/*.sh; do
    [ -r "$i" ] && . "$i"
done

# if our session isn't interactive, return with success and finish execution
case "$-" in
    *i*) ;;
      *) return 0 ;;
esac


# ------------------------- Part 4: Run once, when in an interactive shell -------------------------

# source everything in ~/.config/shell/scripts/once/interactive/
for i in ${XDG_CONFIG_HOME:-$HOME/.config}/shell/scripts/once/interactive/*.sh; do
    [ -r "$i" ] && . "$i"
done

# if our session isn't a login shell, return with success and finish execution
case "$0" in
    -*) ;;
     *) return 0 ;;
esac


# ---------------------------- Part 5: Run once, when in a login shell -----------------------------

# store the login shell pid
export LOGIN_PID="$$"

# when logging out, execute everything in ~/.config/shell/scripts/logout and kill sessions
trap '{
    for i in ${XDG_CONFIG_HOME:-$HOME/.config}/shell/scripts/logout/*.sh; do
        [ -r "$i" ] && . "$i"
    done
}' 0

# execute everything in ~/.config/shell/scripts/login
for i in ${XDG_CONFIG_HOME:-$HOME/.config}/shell/scripts/login/*.sh; do
    [ -r "$i" ] && . "$i"
done
