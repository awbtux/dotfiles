#!/bin/sh

# yash init file; todo: look at https://github.com/magicant/yash/blob/trunk/share/initialization/common

# source our profile if needed
test -z "$USERPROFILE_CURRENT" -a -r "${XDG_CONFIG_HOME:-$HOME/.config}/shell/profile" && . "${XDG_CONFIG_HOME:-$HOME/.config}/shell/profile"

# check if the proper shell is sourcing this file
case "${SHNAME:-${ZSH_ARGZERO:-$0}}" in
    -yash|yash|*/yash) ;;
    *) . "$ENV"; return 0 ;;
esac

# shell options
set -o vi
set -o lealwaysrp
set -o lepredict

# keymaps
for mode in -v -a; do
    bindkey "$mode" '\^A' beginning-of-line
    bindkey "$mode" '\^E' end-of-line
    bindkey "$mode" '\^K' forward-kill-line
    bindkey "$mode" '\^L' clear-and-redraw-all
    bindkey "$mode" '\^U' backward-delete-line
    bindkey "$mode" '\^W' backward-delete-viword
    bindkey "$mode" '\^[[1;5D' backward-viword
    bindkey "$mode" '\^[[1;5C' end-of-viword
    bindkey "$mode" '\^Q' backward-bigword
    bindkey "$mode" '\^R' forward-bigword
done
bindkey -v '\^F' setmode-vicommand
bindkey -a '\^F' setmode-viinsert

# if not running interactively, don't do anything else
case "$-" in
    *i*) ;;
      *) return 0 ;;
esac

# if we have access to the 'stty' binary, specify args for it
command -v stty >/dev/null 2>&1 && stty -ixon

# alias !! to the last command, and
# set the PS1 using set_ps1 if the shell supports it
# this is pretty janky, but it works
PROMPT_COMMAND="alias !!=\"\$(history | sed -e '/\!!$/d' -e 's/^[0-9][0-9]*\t//' | sed -n '\$p')\"; set_ps1"

# command prediction font style
PS1P="\[\e[90m\]"

# load ~/.config/shell/aliases
test -r "${XDG_CONFIG_HOME:-$HOME/.config}/shell/aliases" && . "${XDG_CONFIG_HOME:-$HOME/.config}/shell/aliases"

# load scripts in rc.d
test -d "${XDG_CONFIG_HOME:-$HOME/.config}/shell/yashrc.d" && {
    for i in ${XDG_CONFIG_HOME:-$HOME/.config}/shell/yashrc.d/*.sh; do
        test -r "$i" && . "$i"
    done
}
