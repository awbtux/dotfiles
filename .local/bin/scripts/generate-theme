#!/bin/sh

# generate theme configurations
# TODO: overhaul macros and use a preprocessor instead of sed

# theme select menu
chtheme() {
    test -z "$1" && return 1
    printf "\033[1mApplying which theme?\033[22m\n" >&2
    itmc="$#"
    linec="$(($#+1))"
    for itm in "$@"; do
        itmc="$((itmc-1))"
        printf "\033[1m[\033[36m%s\033[39m]\033[22m " "$(($#-itmc))" >&2
        printf "$(sed -n '1s/^#\\e\(\[38;2;[0-9]\+;[0-9]\+;[0-9]\+m\)\\e\(\[48;2;[0-9]\+;[0-9]\+;[0-9]\+m\)$/\x1B\1\x1B\2/p' <"$itm/theme.conf" 2>/dev/null)" >&2
        printf "%s\033[0m\n" "${itm##*/}" >&2
    done
    while true; do
        printf "\033[1mEnter your choice [\033[36m1\033[39m-\033[36m$#\033[39m]\033[22m " >&2
        linec="$((linec+1))"
        read inum
        test "$inum" -gt "0" -a "$inum" -le "$#" >&- 2>&- && break
    done
    eval "printf \"\${$inum##*/}\""
    printf "\033[${linec}A$(for a in $(seq 1 "$linec"); do printf "\033[2K\n"; done)\n\033[${linec}A" >&2
}

# we need sed
for c in find sed; do
    test -z "$(command -v "$c")" && printf "$c: command not found\n" >&2 && exit 127
done

# look for themes in here
themedir="${XDG_CONFIG_HOME:-$HOME/.config}/themes"

# get name of theme from $1
test -r "$themedir${1:+/$1/}theme.conf" && theme="$1"

# for loops won't split fields using tabs or spaces
IFS="$(printf "\n\v")"

# or pick one
test -z "$themes" && themes="$(find "$themedir" -mindepth 1 -type d 2>/dev/null)"
test -z "$themes" && themes="$(for d in "$themedir"/* "$themedir"/*/*; do test -d "$d" && printf "%s\n" "$d"; done)"
test -z "$theme" && theme="$(chtheme $themes)"
test ! -r "$themedir/$theme/theme.conf" && printf "%s: error: %s: No such file or directory" "$0" "$themedir/$theme/theme.conf"

# print theme variables
#sed -n '/^\${theme_[a-zA-Z0-9_]\+} = .*$/s/^\${\([a-zA-Z0-9_]\+\)} = \(.*\)$/\1: "\2"/gp' "$themedir/$theme/theme.conf"

# generate theme-specific config files from templates
for file in $(find "${XDG_CONFIG_HOME:-$HOME/.config}" "${XDG_DATA_HOME:-$HOME/.local/share}" -type f | sed -n '/\/\.\?___/p'); do
    dir="${file%/*}"
    name="${file##*/}"
    test "${name#.}" != "$name" && name=".${name##.___}" || name="${name##___}"
    printf "%s\r\n" "sed <./${file##*/} >./$name"
    eval "sed $(for sub in $(sed -n '/^\${theme_[a-zA-Z0-9_]\+} = .*$/p' "$themedir/$theme/theme.conf"); do printf -- "-e 's\f%s\f%s\fg' " "${sub%% = *}" "${sub##${sub%% = *} = }"; done)" <"$file" >"$dir/$name" || exit 1
    printf "\033[1A\033[2KGenerated %s/%s\n" "~${dir##$HOME}" "$name"
done

# reload theme if we can
command -v reload-theme >/dev/null 2>&1 && reload-theme </dev/null &
